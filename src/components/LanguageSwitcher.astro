---
import { type Language } from '@/i18n/translations';

export interface Props {
  lang: Language;
  currentPath: string;
}

const { lang, currentPath } = Astro.props;

// Generate the opposite language URL
function getOppositeLanguageUrl(currentPath: string, currentLang: Language): string {
  const targetLang = currentLang === 'es' ? 'en' : 'es';

  if (currentLang === 'es') {
    // Spanish to English: add /en prefix
    return currentPath === '/' ? '/en' : `/en${currentPath}`;
  } else {
    // English to Spanish: remove /en prefix
    return currentPath.replace(/^\/en/, '') || '/';
  }
}

const oppositeUrl = getOppositeLanguageUrl(currentPath, lang);
---

<div class="relative group">
  <button
    id="language-switcher"
    class="flex items-center space-x-2 p-2 rounded-lg border border-cyan-400/30 hover:border-cyan-400 transition-all duration-300"
    aria-label="Cambiar idioma"
    title="Change language / Cambiar idioma"
  >
    <!-- Flag icon -->
    <div class="w-5 h-5 rounded-sm overflow-hidden">
      {lang === 'es' ? (
        <!-- Spanish flag -->
        <div class="w-full h-full bg-gradient-to-b from-red-500 via-yellow-400 to-red-500 relative">
          <div class="absolute inset-y-1/4 left-0 right-0 bg-yellow-400"></div>
        </div>
      ) : (
        <!-- US/English flag -->
        <div class="w-full h-full bg-gradient-to-b from-red-500 via-white to-red-500 relative">
          <div class="absolute top-0 left-0 w-2/5 h-3/5 bg-blue-600"></div>
          <div class="absolute inset-0 flex flex-col justify-between">
            <div class="h-px bg-white"></div>
            <div class="h-px bg-red-500"></div>
            <div class="h-px bg-white"></div>
            <div class="h-px bg-red-500"></div>
            <div class="h-px bg-white"></div>
          </div>
        </div>
      )}
    </div>

    <!-- Language code -->
    <span class="font-orbitron text-sm font-medium text-cyan-400">
      {lang.toUpperCase()}
    </span>

    <!-- Dropdown arrow -->
    <svg class="w-3 h-3 transition-transform group-hover:rotate-180" fill="none" stroke="currentColor" viewBox="0 0 24 24">
      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
    </svg>

    <!-- Glow effect on hover -->
    <div class="absolute inset-0 rounded-lg bg-gradient-to-r from-cyan-400/10 to-purple-500/10 opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
  </button>

  <!-- Dropdown menu -->
  <div
    id="language-dropdown"
    class="absolute top-full right-0 mt-2 w-32 bg-slate-800/90 backdrop-blur-lg border border-cyan-400/30 rounded-lg shadow-lg opacity-0 invisible transition-all duration-200 group-hover:opacity-100 group-hover:visible"
  >
    <a
      href={oppositeUrl}
      class="flex items-center space-x-3 px-4 py-3 hover:bg-cyan-400/10 transition-colors rounded-lg"
    >
      <div class="w-4 h-4 rounded-sm overflow-hidden">
        {lang === 'es' ? (
          <!-- US flag for switch to English -->
          <div class="w-full h-full bg-gradient-to-b from-red-500 via-white to-red-500 relative">
            <div class="absolute top-0 left-0 w-2/5 h-3/5 bg-blue-600"></div>
          </div>
        ) : (
          <!-- Spanish flag for switch to Spanish -->
          <div class="w-full h-full bg-gradient-to-b from-red-500 via-yellow-400 to-red-500 relative">
            <div class="absolute inset-y-1/4 left-0 right-0 bg-yellow-400"></div>
          </div>
        )}
      </div>
      <span class="font-orbitron text-sm">
        {lang === 'es' ? 'EN' : 'ES'}
      </span>
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const switcher = document.getElementById('language-switcher');
    const dropdown = document.getElementById('language-dropdown');

    if (!switcher || !dropdown) return;

    // Toggle dropdown on click
    switcher.addEventListener('click', () => {
      dropdown.classList.toggle('opacity-0');
      dropdown.classList.toggle('invisible');
    });

    // Close dropdown when clicking outside
    document.addEventListener('click', (e) => {
      if (!switcher.contains(e.target as Node) && !dropdown.contains(e.target as Node)) {
        dropdown.classList.add('opacity-0', 'invisible');
      }
    });
  });
</script>
