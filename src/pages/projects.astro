---
import Layout from '@/layouts/Layout.astro';
import Navbar from '@/components/Navbar.astro';
import { useTranslation } from '@/i18n/utils';

const { t } = useTranslation('es');

// Función para obtener repositorios de GitHub
async function getGitHubRepos() {
  try {
    const response = await fetch('https://api.github.com/users/KiriDev/repos?sort=updated&per_page=6');
    if (!response.ok) {
      throw new Error('Failed to fetch repositories');
    }
    const repos = await response.json();
    return repos;
  } catch (error) {
    console.error('Error fetching GitHub repos:', error);
    // Fallback data
    return [
      {
        id: 1,
        name: 'portfolio-website',
        description: 'Mi portfolio personal construido con Astro y TailwindCSS',
        html_url: '#',
        homepage: '#',
        language: 'TypeScript',
        stargazers_count: 5,
        fork: false,
        topics: ['astro', 'tailwindcss', 'portfolio']
      },
      {
        id: 2,
        name: 'react-task-manager',
        description: 'Aplicación de gestión de tareas con React y localStorage',
        html_url: '#',
        homepage: '#',
        language: 'JavaScript',
        stargazers_count: 8,
        fork: false,
        topics: ['react', 'javascript', 'productivity']
      },
      {
        id: 3,
        name: 'vue-weather-app',
        description: 'Aplicación del clima con Vue.js y API externa',
        html_url: '#',
        homepage: '#',
        language: 'Vue',
        stargazers_count: 3,
        fork: false,
        topics: ['vue', 'weather', 'api']
      }
    ];
  }
}

const repos = await getGitHubRepos();

// Función para obtener el color del lenguaje
function getLanguageColor(language: string) {
  const colors: Record<string, string> = {
    'JavaScript': '#f1e05a',
    'TypeScript': '#2b7489',
    'Vue': '#4fc08d',
    'React': '#61dafb',
    'HTML': '#e34c26',
    'CSS': '#1572b6',
    'Python': '#3572a5',
    'Astro': '#ff5a03'
  };
  return colors[language] || '#6b7280';
}
---

<Layout title="Proyectos - KiriDev" lang="es">
  <Navbar lang="es" currentPath="/projects" />

  <main class="min-h-screen pt-24 pb-16">
    <div class="container mx-auto px-6">
      <!-- Page Header -->
      <div class="text-center mb-16">
        <h1 class="text-5xl md:text-6xl font-cinzel font-bold mb-6">
          <span class="bg-gradient-to-r from-cyan-400 to-purple-400 bg-clip-text text-transparent">
            {t.projects.title}
          </span>
        </h1>
        <p class="text-xl text-gray-300 max-w-2xl mx-auto font-cinzel">
          {t.projects.description}
        </p>
        <div class="w-24 h-1 bg-gradient-to-r from-cyan-400 to-purple-400 mx-auto mt-6"></div>
      </div>

      <!-- Projects Grid -->
      <div class="grid md:grid-cols-2 lg:grid-cols-3 gap-8">
        {repos.map((repo, index) => (
          <div class="mmorpg-card group hover:scale-105 transition-transform duration-300" data-project={index}>
            <!-- Project header -->
            <div class="flex items-start justify-between mb-4">
              <div class="flex items-center space-x-2">
                <div class="w-8 h-8 bg-gradient-to-br from-cyan-400 to-purple-500 rounded-lg flex items-center justify-center">
                  <span class="text-white text-sm font-bold">🏰</span>
                </div>
                <h3 class="font-orbitron font-bold text-cyan-400 text-lg">{repo.name}</h3>
              </div>

              {repo.stargazers_count > 0 && (
                <div class="flex items-center space-x-1 text-yellow-400">
                  <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                  </svg>
                  <span class="text-sm font-orbitron">{repo.stargazers_count}</span>
                </div>
              )}
            </div>

            <!-- Description -->
            <p class="text-gray-300 mb-6 font-cinzel leading-relaxed">
              {repo.description || 'Proyecto en desarrollo...'}
            </p>

            <!-- Language and topics -->
            <div class="mb-6">
              {repo.language && (
                <div class="flex items-center mb-3">
                  <div
                    class="w-3 h-3 rounded-full mr-2"
                    style={`background-color: ${getLanguageColor(repo.language)}`}
                  ></div>
                  <span class="font-orbitron text-sm text-gray-400">{repo.language}</span>
                </div>
              )}

              {repo.topics && repo.topics.length > 0 && (
                <div class="flex flex-wrap gap-2">
                  {repo.topics.slice(0, 3).map((topic: string) => (
                    <span class="px-2 py-1 bg-slate-700/50 text-cyan-400 text-xs font-orbitron rounded border border-cyan-400/30">
                      {topic}
                    </span>
                  ))}
                </div>
              )}
            </div>

            <!-- Action buttons -->
            <div class="flex space-x-3 mt-auto">
              {repo.homepage && repo.homepage !== '' && (
                <a
                  href={repo.homepage}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex-1 mmorpg-button text-center text-sm py-2"
                >
                  {t.projects.viewProject}
                </a>
              )}

              <a
                href={repo.html_url}
                target="_blank"
                rel="noopener noreferrer"
                class={`${repo.homepage ? 'flex-1' : 'w-full'} mmorpg-button text-center text-sm py-2 bg-gradient-to-r from-purple-500/20 to-pink-500/20 border-purple-400`}
              >
                {t.projects.viewCode}
              </a>
            </div>

            <!-- Hover effect overlay -->
            <div class="absolute inset-0 bg-gradient-to-br from-cyan-400/5 to-purple-500/5 opacity-0 group-hover:opacity-100 transition-opacity duration-300 rounded-lg pointer-events-none"></div>
          </div>
        ))}
      </div>

      <!-- GitHub link -->
      <div class="text-center mt-16">
        <a
          href="https://github.com/KiriDev"
          target="_blank"
          rel="noopener noreferrer"
          class="mmorpg-button inline-flex items-center space-x-3"
        >
          <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
            <path fill-rule="evenodd" d="M10 0C4.477 0 0 4.484 0 10.017c0 4.425 2.865 8.18 6.839 9.504.5.092.682-.217.682-.483 0-.237-.008-.868-.013-1.703-2.782.605-3.369-1.343-3.369-1.343-.454-1.158-1.11-1.466-1.11-1.466-.908-.62.069-.608.069-.608 1.003.07 1.531 1.032 1.531 1.032.892 1.53 2.341 1.088 2.91.832.092-.647.35-1.088.636-1.338-2.22-.253-4.555-1.113-4.555-4.951 0-1.093.39-1.988 1.029-2.688-.103-.253-.446-1.272.098-2.65 0 0 .84-.27 2.75 1.026A9.564 9.564 0 0110 4.844c.85.004 1.705.115 2.504.337 1.909-1.296 2.747-1.027 2.747-1.027.546 1.379.203 2.398.1 2.651.64.7 1.028 1.595 1.028 2.688 0 3.848-2.339 4.695-4.566 4.942.359.31.678.921.678 1.856 0 1.338-.012 2.419-.012 2.747 0 .268.18.58.688.482A10.019 10.019 0 0020 10.017C20 4.484 15.522 0 10 0z" clip-rule="evenodd"></path>
          </svg>
          <span>Ver todos los proyectos en GitHub</span>
        </a>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { gsap } from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  document.addEventListener('DOMContentLoaded', () => {
    // Animate project cards
    gsap.from('[data-project]', {
      duration: 0.8,
      y: 50,
      opacity: 0,
      stagger: 0.15,
      ease: 'power3.out',
      scrollTrigger: {
        trigger: '[data-project]',
        start: 'top 80%',
        toggleActions: 'play none none reverse'
      }
    });

    // Hover animations for project cards
    const projectCards = document.querySelectorAll('[data-project]');
    projectCards.forEach(card => {
      card.addEventListener('mouseenter', () => {
        gsap.to(card, {
          duration: 0.3,
          y: -5,
          ease: 'power2.out'
        });
      });

      card.addEventListener('mouseleave', () => {
        gsap.to(card, {
          duration: 0.3,
          y: 0,
          ease: 'power2.out'
        });
      });
    });
  });
</script>
