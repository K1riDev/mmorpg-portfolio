---
import Layout from "@/layouts/Layout.astro";
import Navbar from "@/components/Navbar.astro";
import { useTranslation } from "@/i18n/utils";

const { t } = useTranslation("en");
---

<Layout title="KiriDev - Portfolio" lang="en">
  <Navbar lang="en" currentPath="/en" />

  <!-- Hero Section -->
  <main
    class="min-h-screen flex items-center justify-center relative overflow-hidden pt-16"
  >
    <!-- Animated background elements -->
    <div class="absolute inset-0 z-0">
      <!-- Floating orbs -->
      <div
        class="absolute top-1/4 left-1/4 w-32 h-32 bg-cyan-400/20 rounded-full blur-xl animate-float"
      >
      </div>
      <div
        class="absolute top-3/4 right-1/4 w-24 h-24 bg-purple-500/20 rounded-full blur-xl animate-float"
        style="animation-delay: 1s;"
      >
      </div>
      <div
        class="absolute top-1/2 left-3/4 w-20 h-20 bg-yellow-400/20 rounded-full blur-xl animate-float"
        style="animation-delay: 2s;"
      >
      </div>
    </div>

    <div class="container mx-auto px-6 text-center relative z-10">
      <!-- Main title with MMORPG styling -->
      <div class="mb-8">
        <h1 class="text-6xl md:text-8xl font-cinzel font-bold mb-4">
          <span
            class="bg-gradient-to-r from-cyan-400 via-purple-400 to-cyan-400 bg-clip-text text-transparent animate-pulse-glow"
          >
            {t.home.welcome}
          </span>
        </h1>

        <div class="relative inline-block">
          <h2 class="text-2xl md:text-3xl font-orbitron text-gray-300 mb-6">
            {t.home.subtitle}
          </h2>
          <!-- Decorative lines -->
          <div
            class="absolute -left-16 top-1/2 w-12 h-px bg-gradient-to-r from-transparent to-cyan-400"
          >
          </div>
          <div
            class="absolute -right-16 top-1/2 w-12 h-px bg-gradient-to-l from-transparent to-cyan-400"
          >
          </div>
        </div>
      </div>

      <!-- Character stats-style info -->
      <div class="mb-12">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 max-w-4xl mx-auto">
          <!-- Experience stat -->
          <div class="mmorpg-card group cursor-pointer">
            <div class="text-3xl mb-2 text-cyan-400 glow-effect">‚öîÔ∏è</div>
            <div class="text-2xl font-orbitron font-bold text-cyan-400">3+</div>
            <div class="text-sm text-gray-400 font-cinzel">
              {t.home.stats.experience}
            </div>
          </div>

          <!-- Projects stat -->
          <div class="mmorpg-card group cursor-pointer">
            <div class="text-3xl mb-2 text-purple-400 glow-effect-secondary">
              üè∞
            </div>
            <div class="text-2xl font-orbitron font-bold text-purple-400">
              15+
            </div>
            <div class="text-sm text-gray-400 font-cinzel">
              {t.home.stats.projects}
            </div>
          </div>

          <!-- Technologies stat -->
          <div class="mmorpg-card group cursor-pointer">
            <div class="text-3xl mb-2 text-yellow-400 glow-effect-accent">
              üíé
            </div>
            <div class="text-2xl font-orbitron font-bold text-yellow-400">
              10+
            </div>
            <div class="text-sm text-gray-400 font-cinzel">
              {t.home.stats.technologies}
            </div>
          </div>
        </div>
      </div>

      <!-- Description -->
      <p
        class="text-lg md:text-xl text-gray-300 max-w-3xl mx-auto mb-12 font-cinzel leading-relaxed"
      >
        {t.home.description}
      </p>

      <!-- CTA Button -->
      <div class="mb-12">
        <a
          href="/en/about"
          class="mmorpg-button inline-flex items-center space-x-3 text-lg"
          id="enter-realm-btn"
        >
          <span>{t.home.enterButton}</span>
          <svg
            class="w-5 h-5"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
          >
            <path
              stroke-linecap="round"
              stroke-linejoin="round"
              stroke-width="2"
              d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
          </svg>
        </a>
      </div>

      <!-- Scroll indicator -->
      <div
        class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce"
      >
        <div class="w-6 h-10 border-2 border-cyan-400 rounded-full p-1">
          <div class="w-1 h-3 bg-cyan-400 rounded-full mx-auto animate-pulse">
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  import { gsap } from "gsap";

  document.addEventListener("DOMContentLoaded", () => {
    // GSAP animations
    const tl = gsap.timeline();

    // Animate main title
    tl.from("h1", {
      duration: 1.5,
      y: 50,
      opacity: 0,
      ease: "power3.out",
    })
      // Animate subtitle
      .from(
        "h2",
        {
          duration: 1,
          y: 30,
          opacity: 0,
          ease: "power2.out",
        },
        "-=0.8"
      )
      // Animate stats cards
      .from(
        ".mmorpg-card",
        {
          duration: 0.8,
          y: 40,
          opacity: 0,
          stagger: 0.2,
          ease: "back.out(1.7)",
        },
        "-=0.5"
      )
      // Animate description
      .from(
        "p",
        {
          duration: 1,
          y: 20,
          opacity: 0,
          ease: "power2.out",
        },
        "-=0.4"
      )
      // Animate CTA button
      .from(
        "#enter-realm-btn",
        {
          duration: 0.8,
          scale: 0.8,
          opacity: 0,
          ease: "back.out(1.7)",
        },
        "-=0.3"
      );

    // Parallax effect for floating orbs
    document.addEventListener("mousemove", (e) => {
      const orbs = document.querySelectorAll(".animate-float");
      const mouseX = e.clientX / window.innerWidth;
      const mouseY = e.clientY / window.innerHeight;

      orbs.forEach((orb, index) => {
        const speed = (index + 1) * 0.5;
        const x = (mouseX - 0.5) * 100 * speed;
        const y = (mouseY - 0.5) * 100 * speed;

        gsap.to(orb, {
          duration: 1,
          x: x,
          y: y,
          ease: "power2.out",
        });
      });
    });
  });
</script>
