---
import Layout from '@/layouts/Layout.astro';
import Navbar from '@/components/Navbar.astro';
import { useTranslation } from '@/i18n/utils';
import { fetchGitHubRepos, getLanguageColor, getLanguageIcon, type GitHubRepo } from '@/lib/github';
import { getIcon } from '@/lib/icons';

const { t } = useTranslation('en');

// Obtener repositorios de GitHub con fallback
async function getGitHubRepos(): Promise<GitHubRepo[]> {
  try {
    // Username real de GitHub
    return await fetchGitHubRepos('K1riDev');
  } catch (error) {
    // Fallback data with MMORPG theme
    return [
      {
        id: 1,
        name: 'mmorpg-portfolio',
        description: 'Personal portfolio with MMORPG design built with Astro and TailwindCSS',
        html_url: 'https://github.com/your-username/mmorpg-portfolio',
        homepage: 'https://your-portfolio.com',
        language: 'TypeScript',
        stargazers_count: 5,
        forks_count: 2,
        fork: false,
        topics: ['astro', 'tailwindcss', 'portfolio', 'mmorpg']
      },
      {
        id: 2,
        name: 'guild-manager',
        description: 'Guild management system for MMORPG games',
        html_url: 'https://github.com/your-username/guild-manager',
        homepage: 'https://guild-manager.com',
        language: 'JavaScript',
        stargazers_count: 12,
        forks_count: 4,
        fork: false,
        topics: ['javascript', 'gaming', 'mmorpg', 'guild']
      },
      {
        id: 3,
        name: 'dungeon-crawler',
        description: 'Web dungeon exploration game with vanilla JavaScript',
        html_url: 'https://github.com/your-username/dungeon-crawler',
        homepage: 'https://dungeon-game.com',
        language: 'JavaScript',
        stargazers_count: 8,
        forks_count: 3,
        fork: false,
        topics: ['game', 'dungeon', 'javascript', 'rpg']
      },
      {
        id: 4,
        name: 'character-sheet',
        description: 'Application to create and manage RPG character sheets',
        html_url: 'https://github.com/your-username/character-sheet',
        homepage: 'https://character-sheet.app',
        language: 'Vue',
        stargazers_count: 6,
        forks_count: 1,
        fork: false,
        topics: ['vue', 'rpg', 'character', 'sheet']
      },
      {
        id: 5,
        name: 'loot-calculator',
        description: 'Loot and probability calculator for RPG games',
        html_url: 'https://github.com/your-username/loot-calculator',
        homepage: 'https://loot-calc.com',
        language: 'React',
        stargazers_count: 4,
        forks_count: 2,
        fork: false,
        topics: ['react', 'calculator', 'gaming', 'loot']
      },
      {
        id: 6,
        name: 'quest-tracker',
        description: 'Quest and objective tracker for MMORPG players',
        html_url: 'https://github.com/your-username/quest-tracker',
        homepage: 'https://quest-tracker.app',
        language: 'TypeScript',
        stargazers_count: 10,
        forks_count: 5,
        fork: false,
        topics: ['typescript', 'quest', 'tracker', 'mmorpg']
      }
    ];
  }
}

const repos = await getGitHubRepos();
---

<Layout title="Projects - KiriDev" lang="en">
  <Navbar lang="en" currentPath="/en/projects" />

  <main class="min-h-screen pt-24 pb-16">
    <div class="container mx-auto px-4">
      <!-- Header -->
      <div class="text-center mb-12">
        <h1 class="text-4xl md:text-6xl font-bold mb-4 text-transparent bg-clip-text bg-gradient-to-r from-yellow-400 via-yellow-500 to-yellow-600 font-cinzel">
          {t.projects.title}
        </h1>
        <p class="text-lg text-slate-300 max-w-2xl mx-auto font-orbitron">
          {t.projects.subtitle}
        </p>
      </div>

      <!-- Projects Grid -->
      <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
        {repos.map((project: GitHubRepo) => (
          <article class="mmorpg-card group hover:scale-105 transition-all duration-300">
            <div class="p-6">
              <!-- Project Header -->
              <div class="flex items-center justify-between mb-4">
                <h3 class="text-xl font-bold text-yellow-400 font-cinzel group-hover:text-yellow-300 transition-colors">
                  {project.name}
                </h3>
                <div class="flex items-center space-x-2 text-slate-400 text-sm">
                  {project.stargazers_count && (
                    <span class="flex items-center space-x-1">
                      <div class="w-4 h-4" set:html={getIcon('star')}></div>
                      <span>{project.stargazers_count}</span>
                    </span>
                  )}
                  {project.forks_count && (
                    <span class="flex items-center space-x-1">
                      <div class="w-4 h-4" set:html={getIcon('fork')}></div>
                      <span>{project.forks_count}</span>
                    </span>
                  )}
                </div>
              </div>

              <!-- Description -->
              <p class="text-slate-300 mb-4 text-sm leading-relaxed">
                {project.description || 'No description available.'}
              </p>

              <!-- Language and Topics -->
              <div class="mb-4">
                {project.language && (
                  <div class="flex items-center mb-3">
                    <div class="flex items-center justify-center w-5 h-5 mr-2" style={`color: ${getLanguageColor(project.language)}`}>
                      <Fragment set:html={getLanguageIcon(project.language)} />
                    </div>
                    <span class="text-yellow-400 font-orbitron text-xs">{project.language}</span>
                  </div>
                )}
                {project.topics && project.topics.slice(0, 3).map((topic: string) => (
                  <span class="inline-block bg-slate-700/50 text-slate-300 px-2 py-1 rounded text-xs mr-1 mb-1">
                    {topic}
                  </span>
                ))}
              </div>

              <!-- Actions -->
              <div class="flex space-x-3 mt-auto">
                <a
                  href={project.html_url}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="flex-1 mmorpg-button text-center py-2 px-4 text-sm"
                >
                  <div class="w-4 h-4 inline mr-2" set:html={getIcon('code')}></div>
                  Code
                </a>
                {project.homepage && (
                  <a
                    href={project.homepage}
                    target="_blank"
                    rel="noopener noreferrer"
                    class="flex-1 bg-slate-700/50 hover:bg-slate-600/50 text-slate-300 hover:text-white border border-slate-600 hover:border-slate-500 rounded-lg transition-all duration-300 text-center py-2 px-4 text-sm"
                  >
                    <div class="w-4 h-4 inline mr-2" set:html={getIcon('castle')}></div>
                    Demo
                  </a>
                )}
              </div>
            </div>
          </article>
        ))}
      </div>

      <!-- GitHub Profile Link -->
      <div class="text-center mt-16">
        <a
          href="https://github.com/K1riDev"
          target="_blank"
          rel="noopener noreferrer"
          class="mmorpg-button inline-flex items-center space-x-2 px-8 py-3"
        >
          <div class="w-5 h-5" set:html={getIcon('code')}></div>
          <span>{t.projects.viewAll}</span>
        </a>
      </div>
    </div>
  </main>

  <script>
    import { gsap } from 'gsap';
    import { ScrollTrigger } from 'gsap/ScrollTrigger';

    gsap.registerPlugin(ScrollTrigger);

    // Animate project cards on scroll
    gsap.fromTo('.mmorpg-card',
      {
        opacity: 0,
        y: 50
      },
      {
        opacity: 1,
        y: 0,
        duration: 0.8,
        stagger: 0.1,
        scrollTrigger: {
          trigger: '.mmorpg-card',
          start: 'top 80%',
          end: 'bottom 20%',
        }
      }
    );

    // Add glow effect on hover
    document.querySelectorAll('.mmorpg-card').forEach(card => {
      card.addEventListener('mouseenter', () => {
        gsap.to(card, {
          boxShadow: '0 0 30px rgba(234, 179, 8, 0.3)',
          duration: 0.3
        });
      });

      card.addEventListener('mouseleave', () => {
        gsap.to(card, {
          boxShadow: '0 0 0px rgba(234, 179, 8, 0)',
          duration: 0.3
        });
      });
    });
  </script>
</Layout>
